HiPerCic Project / St. Olaf College / Computer Science Dept.

NEWAPP_README

Welcome to a new Hipercic App!  TODO: Intro stuff here.

*** A note about PYTHONPATH -- we advise that you add the directoruy which holds your hipercic-local directory to your shell's PYTHONPATH.  In bash, you can add the line "export PYTHONPATH=path_here" to your ~/.bashrc file.


*** A note about dcor -- this is a flag for you to insert the name of your app.  A good way to find every instance is with
      	    a terminal command: grep -r dcor *


*** A note about relative link paths -- the links on your site will always be subsets of the base Hipercic path, with your app name
      	    added on.  All links in urls.py will already be sublinks of the master path.  So your app will be located
	    at hipercic.domain.domain/dcor/

*** This new hipercic app already has several files set up for you.  Here's what they are for:

__init__.py -- This file is crucial to the operation of your app as a python package.  Don't delete or modify it!


doc -- this script is used to generate documentation for your app.  An HTML API is placed in the templates/api directory, and the urlConfig for the API links is held in apiUrls.py

dbConfig.py -- holds constants DB_NAME, DB_PATH, and DB_CONFIGURATION.  Configure these just as you would for a django settings.py file.
	       The Hipercore framework will automatically export them into Django's namespace.  Also contains the DatabaseRouter class
	       which associates models in your app with your app's database.  The default DatabaseRouter configuration allows only models
	       in your app to access the database, and only allows your database to be used with models in your app.  This will probably
	       never need to be modified.


NOTES -- A text file where you can keep notes about your project.  It can be very helpful for others developing alongside or after you.


models.py -- Where you will write the models for your project, classes which will be stored in the database as tables.  This system is
	     incredibly efficient because Django takes care of all the database access for you.  See Django documentation for details.


navbar.py -- Contains appNavList, a list of dictionaries defining entries in the top navigation bar for your app.  As you build pages,
	     add them to the appNavList in order to include them in the bar of links at the top.  And in each of your view functions,
	     be sure to include a NavigationBar object as shown in this file.


templates/ -- Directory for your templates.  The template sample.html shows how to set up a template to extend the base Hipercic
	      template.  For site consistancy, always extend the base_site.html template!


tests.py -- TODO: Write a description for this!!!


urls.py -- Associates urls requested by a web browser with view functions.  All paths are relative.  Be sure to fill in the python
	   module path to the file which holds your app's view functions.


views.py -- Holds the view functions for rendering pages on your site.  Be sure to follow the model for inclusion of a NavigationBar
	    and CSRF protection in your site.


backend/ -- This is where your backend code can live.  As of 6/28, the structure of this folder is entirely up to you.
	    TODO: Chris needs to update this and extend it for cross-computer use.

static/ -- Holds static media for your app, meaning the javascripts, images, and other files you need to access.  To reference these from a template, use the {{ STATIC_PREFIX }} tag before the name of your file.
